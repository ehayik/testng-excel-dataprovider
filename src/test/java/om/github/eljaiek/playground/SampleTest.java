/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package om.github.eljaiek.playground;

import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Factory;
import org.testng.annotations.Test;

import java.io.IOException;
import java.io.InputStream;
import java.util.Iterator;
import java.util.stream.Stream;
import java.util.stream.StreamSupport;

import static org.testng.Assert.assertNotNull;

public class SampleTest {

  private final String url;

  @Factory(dataProvider = "getUrls")
  public SampleTest(String url) {
    this.url = url;
  }

  @DataProvider(name = "getUrls")
  public static Iterator<Object[]> loadUrls() throws IOException {
    InputStream inputStream =
        SampleTest.class.getClassLoader().getResourceAsStream("urls-sheet.xlsx");

    try (Workbook workbook = new XSSFWorkbook(inputStream)) {
      Iterable<Row> iterable = () -> workbook.getSheetAt(0).iterator();
      Stream<Row> rows = StreamSupport.stream(iterable.spliterator(), false);

      return rows.map(row -> new Object[] {row.getCell(0).getStringCellValue()}).iterator();
    }
  }

  @Test
  public void testProvidedUrl() {
    assertNotNull(url, "url should have a value");
  }
}
